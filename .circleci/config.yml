version: 2.1

commands:
    checkout_restore_gradle_cache:
        steps:
            - checkout
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "build.gradle" }}
                    - v1-dependencies-
    checkout_restore_node_cache:
        steps:
            - checkout
            - restore_cache:
                keys:
                    - m2-dependencies-
            - restore_cache:
                keys:    
                    - v1-dependencies-{{ checksum "build.gradle" }}
                    - v1-dependencies-
executors:
    gradle: 
        docker:
            - image: circleci/openjdk:8-jdk
        environment:
            JVM_OPTS: -Xmx3200m
            TERM: dumb
    node:
        docker:
            - image: circleci/node:10.15.3
            - image: circleci/openjdk:8-jdk
        environment:
            JVM_OPTS: -Xmx3200m
            TERM: dumb
    node_browsers:
        docker:
            - image: circleci/node:10-browsers
            - image: circleci/openjdk:8-jdk
        environment:
            JVM_OPTS: -Xmx3200m
            TERM: dumb
jobs:
    # install
    install:
        executor: node
        steps:
            - checkout_restore_node_cache
            - run: sudo apt-get install openjdk-8
            - run: ./gradlew panel:install
            - save_cache:
                paths:
                    - ~/panel/node_modules
                key: m2-dependencies-
    dependencies:
        executor: gradle
        steps:
            - checkout_restore_gradle_cache
            - run: ./gradlew dependencies
            - save_cache:
                paths:
                    - ~/.gradle
                key: v1-dependencies-{{ checksum "build.gradle" }}
    # tests
    core_test:
        executor: gradle
        steps:
            - checkout_restore_gradle_cache
            - run: ./gradlew core:test
    desktop_test:
        executor: gradle
        steps:
            - checkout_restore_gradle_cache
            - run: ./gradlew desktop:test
    mercenaire_test:
        executor: gradle
        steps:
            - checkout_restore_gradle_cache
            - run: ./gradlew mercenaire:test
    server_test:
        executor: gradle
        steps:
            - checkout_restore_gradle_cache
            - run: ./gradlew server:test
    panel_lint:
        executor: node
        steps:
            - checkout_restore_node_cache
            - run: ./gradlew panel:lint
    panel_test:
        executor: node_browsers
        steps:
            - checkout_restore_node_cache
            - run: ./gradlew panel:test
    panel_e2e:
        executor: node_browsers
        steps:
            - checkout_restore_node_cache
            - run: ./gradlew panel:e2e
    #builds
    desktop_build:
        executor: gradle
        steps:
            - checkout_restore_gradle_cache
            - run: ./gradlew dist
    server_build:
        executor: gradle
        steps:
            - checkout_restore_gradle_cache
            - run: ./gradlew server:build
    panel_build:
        executor: node
        steps:
            - checkout_restore_node_cache
            - run: ./gradlew panel:build

workflows:
    version: 2.1
    integration:
        jobs:
            - dependencies
            - install:
                requires:
                    - dependencies    
            - panel_lint:
                requires:
                    - install
            - panel_test:
                requires:
                    - install
            - panel_e2e:
                requires:
                    - install
            - mercenaire_test:
                requires:
                    - dependencies
            - core_test:
                requires:
                    - dependencies
            - desktop_test:
                requires:
                    - dependencies
            - server_test:
                requires:
                    - dependencies
            - desktop_build:
                requires:
                    - desktop_test
            - server_build:
                requires:
                    - server_test
            - panel_build:
                requires:
                    - install
                    - desktop_build
                    - server_build
